<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafeComment">
	<select id="getCount" parameterType="int" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM board_cafe_comment
		WHERE ref_group=#{ref_group}
	</select>
	<!-- 글번호를 이용해서 댓글의 내용 수정하기 -->
	<update id="update" parameterType="cafeCommentDto">
		UPDATE board_cafe_comment
		SET content=#{content}
		WHERE num=#{num}
	</update>
	<!-- 글번호르 이용해서 댓글의 deleted 를 'yes' 로 수정하는 메소드 -->
	<update id="delete" parameterType="int">
		UPDATE board_cafe_comment
		SET deleted='yes'
		WHERE num=#{num}
	</update>
	<!-- 글번호를 이용해서 댓글의 자세한 정보를 select 하기 -->
	<select id="getData" parameterType="int" resultType="cafeCommentDto">
		SELECT num, writer, content, target_id, ref_group,
					comment_group, deleted, regdate
		FROM board_cafe_comment
		WHERE num=#{num}
	</select>
	<!--
	 [페이징 처리를 고혀한 댓글의 목록 select 하기] 
	 
	profile 정보는 user_tbl 에 있기 때문에 join 이 필요하다.
	-->
	<select id="getList" resultType="cafeCommentDto" parameterType="cafeCommentDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num, writer, content, target_id, ref_group,
							comment_group, deleted, board_cafe_comment.regdate, profile
				FROM board_cafe_comment
				JOIN user_tbl
				ON board_cafe_comment.writer = user_tbl.userName
				WHERE ref_group=#{ref_group}
				ORDER BY comment_group ASC, num ASC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
			
	</select>

	<!-- 댓글을 저장할때 댓글의 글번호도 미리 CafeCommentDto 객체에 담아 와야 한다. -->
	<insert id="insert" parameterType="cafeCommentDto">
		INSERT INTO board_cafe_comment
		(num, writer, content, target_id, ref_group, comment_group, regdate)
		VALUES(#{num}, #{writer}, #{content}, #{target_id}, #{ref_group},
			#{comment_group}, SYSDATE)
	</insert>
	
	<!-- 저장 예정인 댓글의 글번호를 미리 얻어내기  -->
	<select id="getSequence" resultType="int">
		SELECT board_cafe_comment_seq.NEXTVAL
		FROM DUAL
	</select>

</mapper>